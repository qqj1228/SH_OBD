<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAcHofPvwfxpbcJ7ahsesAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAK9v/ABu4+AAWmc4ACDdLAAEJDAACDhIACkJZABef1gAWlsoABy4+ABim4AARdZ4ACTxQAAEJ
        DQACDxQAGKPcAA9ojAACDBAACDVIAAtOagAFIy8AGKXeABWPwQADExkAC0tlAAk9UgAINEYAAxMaAA5g
        gQAJO08AEXKZAAczRQAMU3AAAxcfAA1aeQAUh7YADVt7AApEXAAXndMAGafiABSLvAAOYoQAAAIDABqu
        6gAase4ABy08AAg3SgAWk8cAE3+rAAQdJwASe6YABSUxABFymgANWHcAAQcKABSJuQAEGyUAAg4TAAcv
        PwAJQVcAG7f2ABBulAAZrekACDhMAAcyQwAYoNgAEnmjABqy7wABCg4AEGuQABaXywACCw8AC0ljABmo
        4wAXntUABzBBAAQeKQAWmM0AFpPGABBtkgAOYYMAAQUHABBwlwAatPMABiw7ABJ3oQAPaY0ACkdgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAABAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAB
        AQICAgICAgICAgICAgICAgIBAQAAAAABAgIBAAAAAAAAAAAAAAAAAAAAAAAAAAABAgICAgICAgICAgIC
        AgICAgICAQEAAAABAgIBAAAAAAAAAAAAAAAAAAAAAAAAAAEBAgICAgICAgICAgICAgICAgICAgEAAAAB
        AgIBAAAAAAAAAAAAAAAAAAAAAAABAQECAgICAgICAgICAgICAgICAgICAgEBAAEBAgIBAAAAAAAAAAAA
        AAAAAAEBAQEBAgICAgICAgICAgICAgICAgICAgICAgIBAQECAgIBAAAAAAABAQEBAAABAQECAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgIBAAAAAAABAgIBAAABAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgIBAAAAAAABAgIBAAEBAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgIBAAAAAAABAgIBAAECAgICAgJWOzcARQRPAgJXCkkCAgICWApGAgICAgICAgICAgIBAAAAAAABAgIB
        AAECAgICAlEAAAAAAABSOAJTAFJUAgICJgBVAgICAgICAgICAgIBAAAAAAABAgIBAAECAgICPUgASUoC
        S0wATQJOAABPAgICUAAFPQICAgICAgICAgIBAAAAAAABAgIBAAECAgICP0BBQgICAkMAAEQ9RQBGAgIC
        RwAARwICAgICAgICAgIBAAAAAAABAgIBAAECAgICAgICAgICODkAOgICOwA8AgICPTcAPgICAgICAgIC
        AgIBAAAAAAABAgIBAAECAgICAgICAjM0AAArNQICNgASCgoKCjcAJgICAgICAgICAgIBAAAAAAABAgIB
        AQECAgICAgItLgAAAC8wAgICMQAAAAAAAAAAMgICAgICAgICAgIBAAAAAAABAgICAgICAgICAgIlAAAm
        JwICAgICKAAAHSkpKSoAKywCAgICAgICAgIBAAAAAAABAgICAgICAgICAgIeAAcCAgIfICECAiIAIwIC
        AhAAACQCAgICAgICAgIBAAAAAAABAgIBAQECAgICAgIUABUWAhcYABkCAhoAGwICAgIcAB0CAgICAgIC
        AgIBAAAAAAABAgIBAAECAgICAgIIDgAAAAAADxACAhEAEgICAgINABMCAgICAgICAgIBAAAAAAABAgIB
        AAECAgICAgICAwQFAAYHCAICAgkKCgsCAgIMCg0CAgICAQICAgIBAAAAAAABAgIBAAECAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgIBAQECAgIBAAAAAAABAgIBAAECAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgIBAAEBAgIBAAAAAAABAgIBAAECAgICAgICAgICAgICAgICAgICAgICAgICAgICAQEBAAAB
        AgIBAAAAAAABAgIBAAECAgICAgICAgICAgICAgICAgICAgICAgICAgIBAQAAAAABAgIBAAAAAAABAgIB
        AAEBAQICAgICAgICAgICAgICAgICAgICAgICAgEBAAAAAAABAgIBAAAAAAABAgIBAAAAAQECAgICAgIC
        AgICAgICAgICAgICAgICAgEAAAAAAAABAQEBAAAAAAABAgIBAAAAAAEBAgICAgICAgICAgICAgICAgIC
        AgICAQEAAAAAAAAAAAAAAAAAAAABAQEBAAAAAAABAQICAgICAgICAgICAgICAgICAgICAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAgICAgEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAgICAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAgICAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAgICAgEBAQEB
        AQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQICAgICAgICAgICAgICAgICAgEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQICAgICAgICAgICAgICAgICAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////AAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA///AAA+HAAD//4AAB4cAAP//gAADhwAA//8AAAOHAAD//AAAAQcAAP/A
        AAAABwAAwwAAAAAHAADDAAAAAAcAAMIAAAAABwAAwgAAAAAHAADCAAAAAAcAAMIAAAAABwAAwgAAAAAH
        AADCAAAAAAcAAMIAAAAABwAAwAAAAAAHAADAAAAAAAcAAMAAAAAABwAAwAAAAAAHAADCAAAAAAcAAMIA
        AAAABwAAwgAAAAAHAADCAAAAAQcAAMIAAAABhwAAwgAAAAeHAADCAAAAD4cAAMOAAAAfhwAAw8AAAB//
        AADD4AAAP/8AAP/wAAA//wAA///wP///AAD///A///8AAP/wAAD//wAA//AAAP//AAD/8AAA//8AAP/w
        AAD//wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA
</value>
  </data>
</root>
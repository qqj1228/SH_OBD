<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAawAAAC0CAYAAADIOhjuAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAJw0lEQVR4Xu3d0ZHbxhIFUIXg
        EByCQnAIDsF/+nUIzkAhOARVKQGHoBAUgkN4jyNgq9a7DQHTmAEBzDlV93NBoneIS4Ik+AEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxvLp6y+P/PYqfw2UPx/5dZ7EMe4979/nvezv09ePj7zM
        8I9Hovtz1dSvyWke0bZq83He4jHa3e+XlPVw7GP6CGWf2h8vfpu3flLTwbI8uD8/8s8j/5OvX+bptDfm
        vNs/CKaDWnly8eWR749Et3unfJ/3fJtpnUXbyeVI/f6f5fF2bPn2MK39fseOU5qauTzY4zs9dv6Zp9TO
        2PNuU1jTQbiU1AgF9T41pvUWbyeX4w700zP96D60yh/zLV3PVFb/vtqX1vk839JJTAvZK6mfp11hmXfJ
        /sKaDmI9H6jnT432hXXsqaJPX/9+c/utc/JTX4H+ZfVtvqWT6P/M5S5pU1jm/ZL8wWE6T//t1bbGTY2r
        F1bR9/9eDvzXOT14RFmVMxin0f8Zy52yv7DM+3VyB7v+D9JrpcY9CqucAlZa0xx6ngZXVhfPvsIy77ep
        P9j1f5BeLzXuUFhF/9Iqa+xEB+s3+u//yUq7fKw4vqOynHxhmXeUTGF5n/VtatylsIrptPBAp8NmA5aV
        Z6m55ArLvJdSd7BT+nFq3KmwiuHew3noe6bmhKdDp+/7RHdWfp5sYZl3nNrCUvpRatytsIr+pfX3fEvP
        1/9thRN+tN8DP5tsYZl3nO0Hu+mgFG1DatyxsIr+TwqfX1qDlpUHfj71hWXeP0tNYZUrgETbkBp3Lazi
        zqXVf9/+nG/pZKYrAkR3WNaTKSzzXk5NYfV8k/naqXHnwir6P96OfxUywqvHRf1fVt45mcIy7+XUFFb0
        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
</value>
  </data>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAK9v/ABu4+AAWmc4ACDdLAAEJDAACDhIACkJZABef1gAWlsoABy4+ABim4AARdZ4ACTxQAAEJ
        DQACDxQAGKPcAA9ojAACDBAACDVIAAtOagAFIy8AGKXeABWPwQADExkAC0tlAAk9UgAINEYAAxMaAA5g
        gQAJO08AEXKZAAczRQAMU3AAAxcfAA1aeQAUh7YADVt7AApEXAAXndMAGafiABSLvAAOYoQAAAIDABqu
        6gAase4ABy08AAg3SgAWk8cAE3+rAAQdJwASe6YABSUxABFymgANWHcAAQcKABSJuQAEGyUAAg4TAAcv
        PwAJQVcAG7f2ABBulAAZrekACDhMAAcyQwAYoNgAEnmjABqy7wABCg4AEGuQABaXywACCw8AC0ljABmo
        4wAXntUABzBBAAQeKQAWmM0AFpPGABBtkgAOYYMAAQUHABBwlwAatPMABiw7ABJ3oQAPaY0ACkdgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAABAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAB
        AQICAgICAgICAgICAgICAgIBAQAAAAABAgIBAAAAAAAAAAAAAAAAAAAAAAAAAAABAgICAgICAgICAgIC
        AgICAgICAQEAAAABAgIBAAAAAAAAAAAAAAAAAAAAAAAAAAEBAgICAgICAgICAgICAgICAgICAgEAAAAB
        AgIBAAAAAAAAAAAAAAAAAAAAAAABAQECAgICAgICAgICAgICAgICAgICAgEBAAEBAgIBAAAAAAAAAAAA
        AAAAAAEBAQEBAgICAgICAgICAgICAgICAgICAgICAgIBAQECAgIBAAAAAAABAQEBAAABAQECAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgIBAAAAAAABAgIBAAABAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgIBAAAAAAABAgIBAAEBAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgIBAAAAAAABAgIBAAECAgICAgJWOzcARQRPAgJXCkkCAgICWApGAgICAgICAgICAgIBAAAAAAABAgIB
        AAECAgICAlEAAAAAAABSOAJTAFJUAgICJgBVAgICAgICAgICAgIBAAAAAAABAgIBAAECAgICPUgASUoC
        S0wATQJOAABPAgICUAAFPQICAgICAgICAgIBAAAAAAABAgIBAAECAgICP0BBQgICAkMAAEQ9RQBGAgIC
        RwAARwICAgICAgICAgIBAAAAAAABAgIBAAECAgICAgICAgICODkAOgICOwA8AgICPTcAPgICAgICAgIC
        AgIBAAAAAAABAgIBAAECAgICAgICAjM0AAArNQICNgASCgoKCjcAJgICAgICAgICAgIBAAAAAAABAgIB
        AQECAgICAgItLgAAAC8wAgICMQAAAAAAAAAAMgICAgICAgICAgIBAAAAAAABAgICAgICAgICAgIlAAAm
        JwICAgICKAAAHSkpKSoAKywCAgICAgICAgIBAAAAAAABAgICAgICAgICAgIeAAcCAgIfICECAiIAIwIC
        AhAAACQCAgICAgICAgIBAAAAAAABAgIBAQECAgICAgIUABUWAhcYABkCAhoAGwICAgIcAB0CAgICAgIC
        AgIBAAAAAAABAgIBAAECAgICAgIIDgAAAAAADxACAhEAEgICAgINABMCAgICAgICAgIBAAAAAAABAgIB
        AAECAgICAgICAwQFAAYHCAICAgkKCgsCAgIMCg0CAgICAQICAgIBAAAAAAABAgIBAAECAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgIBAQECAgIBAAAAAAABAgIBAAECAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgIBAAEBAgIBAAAAAAABAgIBAAECAgICAgICAgICAgICAgICAgICAgICAgICAgICAQEBAAAB
        AgIBAAAAAAABAgIBAAECAgICAgICAgICAgICAgICAgICAgICAgICAgIBAQAAAAABAgIBAAAAAAABAgIB
        AAEBAQICAgICAgICAgICAgICAgICAgICAgICAgEBAAAAAAABAgIBAAAAAAABAgIBAAAAAQECAgICAgIC
        AgICAgICAgICAgICAgICAgEAAAAAAAABAQEBAAAAAAABAgIBAAAAAAEBAgICAgICAgICAgICAgICAgIC
        AgICAQEAAAAAAAAAAAAAAAAAAAABAQEBAAAAAAABAQICAgICAgICAgICAgICAgICAgICAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAgICAgEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAgICAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAgICAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAgICAgEBAQEB
        AQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQICAgICAgICAgICAgICAgICAgEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQICAgICAgICAgICAgICAgICAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////AAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA///AAA+HAAD//4AAB4cAAP//gAADhwAA//8AAAOHAAD//AAAAQcAAP/A
        AAAABwAAwwAAAAAHAADDAAAAAAcAAMIAAAAABwAAwgAAAAAHAADCAAAAAAcAAMIAAAAABwAAwgAAAAAH
        AADCAAAAAAcAAMIAAAAABwAAwAAAAAAHAADAAAAAAAcAAMAAAAAABwAAwAAAAAAHAADCAAAAAAcAAMIA
        AAAABwAAwgAAAAAHAADCAAAAAQcAAMIAAAABhwAAwgAAAAeHAADCAAAAD4cAAMOAAAAfhwAAw8AAAB//
        AADD4AAAP/8AAP/wAAA//wAA///wP///AAD///A///8AAP/wAAD//wAA//AAAP//AAD/8AAA//8AAP/w
        AAD//wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA
</value>
  </data>
</root>
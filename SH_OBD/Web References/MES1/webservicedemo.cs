//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.8.3928.0。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="WebServiceDemoSoap", Namespace="http://tempuri.org/")]
public partial class WebServiceDemo : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback WriteDataToJESOperationCompleted;
    
    private System.Threading.SendOrPostCallback WriteDataToMesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetProtocolOperationCompleted;
    
    /// <remarks/>
    public WebServiceDemo() {
        this.Url = "http://localhost:53827/webservicedemo.asmx";
    }
    
    /// <remarks/>
    public event WriteDataToJESCompletedEventHandler WriteDataToJESCompleted;
    
    /// <remarks/>
    public event WriteDataToMesCompletedEventHandler WriteDataToMesCompleted;
    
    /// <remarks/>
    public event GetProtocolCompletedEventHandler GetProtocolCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteDataToJES", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string WriteDataToJES(System.Data.DataTable dt1MES, System.Data.DataTable dt2MES, out string strMsg) {
        object[] results = this.Invoke("WriteDataToJES", new object[] {
                    dt1MES,
                    dt2MES});
        strMsg = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginWriteDataToJES(System.Data.DataTable dt1MES, System.Data.DataTable dt2MES, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("WriteDataToJES", new object[] {
                    dt1MES,
                    dt2MES}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndWriteDataToJES(System.IAsyncResult asyncResult, out string strMsg) {
        object[] results = this.EndInvoke(asyncResult);
        strMsg = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void WriteDataToJESAsync(System.Data.DataTable dt1MES, System.Data.DataTable dt2MES) {
        this.WriteDataToJESAsync(dt1MES, dt2MES, null);
    }
    
    /// <remarks/>
    public void WriteDataToJESAsync(System.Data.DataTable dt1MES, System.Data.DataTable dt2MES, object userState) {
        if ((this.WriteDataToJESOperationCompleted == null)) {
            this.WriteDataToJESOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteDataToJESOperationCompleted);
        }
        this.InvokeAsync("WriteDataToJES", new object[] {
                    dt1MES,
                    dt2MES}, this.WriteDataToJESOperationCompleted, userState);
    }
    
    private void OnWriteDataToJESOperationCompleted(object arg) {
        if ((this.WriteDataToJESCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.WriteDataToJESCompleted(this, new WriteDataToJESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteDataToMes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string WriteDataToMes(System.Data.DataTable dt1MES, System.Data.DataTable dt2MES, out string strMsg) {
        object[] results = this.Invoke("WriteDataToMes", new object[] {
                    dt1MES,
                    dt2MES});
        strMsg = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginWriteDataToMes(System.Data.DataTable dt1MES, System.Data.DataTable dt2MES, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("WriteDataToMes", new object[] {
                    dt1MES,
                    dt2MES}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndWriteDataToMes(System.IAsyncResult asyncResult, out string strMsg) {
        object[] results = this.EndInvoke(asyncResult);
        strMsg = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void WriteDataToMesAsync(System.Data.DataTable dt1MES, System.Data.DataTable dt2MES) {
        this.WriteDataToMesAsync(dt1MES, dt2MES, null);
    }
    
    /// <remarks/>
    public void WriteDataToMesAsync(System.Data.DataTable dt1MES, System.Data.DataTable dt2MES, object userState) {
        if ((this.WriteDataToMesOperationCompleted == null)) {
            this.WriteDataToMesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteDataToMesOperationCompleted);
        }
        this.InvokeAsync("WriteDataToMes", new object[] {
                    dt1MES,
                    dt2MES}, this.WriteDataToMesOperationCompleted, userState);
    }
    
    private void OnWriteDataToMesOperationCompleted(object arg) {
        if ((this.WriteDataToMesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.WriteDataToMesCompleted(this, new WriteDataToMesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProtocol", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Response GetProtocol(Request request) {
        object[] results = this.Invoke("GetProtocol", new object[] {
                    request});
        return ((Response)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetProtocol(Request request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetProtocol", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public Response EndGetProtocol(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Response)(results[0]));
    }
    
    /// <remarks/>
    public void GetProtocolAsync(Request request) {
        this.GetProtocolAsync(request, null);
    }
    
    /// <remarks/>
    public void GetProtocolAsync(Request request, object userState) {
        if ((this.GetProtocolOperationCompleted == null)) {
            this.GetProtocolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProtocolOperationCompleted);
        }
        this.InvokeAsync("GetProtocol", new object[] {
                    request}, this.GetProtocolOperationCompleted, userState);
    }
    
    private void OnGetProtocolOperationCompleted(object arg) {
        if ((this.GetProtocolCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProtocolCompleted(this, new GetProtocolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
public partial class Request {
    
    private string zVINField;
    
    /// <remarks/>
    public string ZVIN {
        get {
            return this.zVINField;
        }
        set {
            this.zVINField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
public partial class Response {
    
    private string mESSAGEField;
    
    private string zCSFSField;
    
    private string wERKSField;
    
    private string zBZLField;
    
    private string zjField;
    
    private string zFDJEDGLField;
    
    private string zDZZDField;
    
    private string zFDJEDZSField;
    
    private string plField;
    
    private string zQGSField;
    
    private string vEHICLEMODELField;
    
    private string rLZLField;
    
    private string bSXXSField;
    
    private string qDFSField;
    
    private string qDZWField;
    
    private string zZLField;
    
    private string pQGSLField;
    
    private string zPFJDField;
    
    private string zODBWZField;
    
    /// <remarks/>
    public string MESSAGE {
        get {
            return this.mESSAGEField;
        }
        set {
            this.mESSAGEField = value;
        }
    }
    
    /// <remarks/>
    public string ZCSFS {
        get {
            return this.zCSFSField;
        }
        set {
            this.zCSFSField = value;
        }
    }
    
    /// <remarks/>
    public string WERKS {
        get {
            return this.wERKSField;
        }
        set {
            this.wERKSField = value;
        }
    }
    
    /// <remarks/>
    public string ZBZL {
        get {
            return this.zBZLField;
        }
        set {
            this.zBZLField = value;
        }
    }
    
    /// <remarks/>
    public string ZJ {
        get {
            return this.zjField;
        }
        set {
            this.zjField = value;
        }
    }
    
    /// <remarks/>
    public string ZFDJEDGL {
        get {
            return this.zFDJEDGLField;
        }
        set {
            this.zFDJEDGLField = value;
        }
    }
    
    /// <remarks/>
    public string ZDZZD {
        get {
            return this.zDZZDField;
        }
        set {
            this.zDZZDField = value;
        }
    }
    
    /// <remarks/>
    public string ZFDJEDZS {
        get {
            return this.zFDJEDZSField;
        }
        set {
            this.zFDJEDZSField = value;
        }
    }
    
    /// <remarks/>
    public string PL {
        get {
            return this.plField;
        }
        set {
            this.plField = value;
        }
    }
    
    /// <remarks/>
    public string ZQGS {
        get {
            return this.zQGSField;
        }
        set {
            this.zQGSField = value;
        }
    }
    
    /// <remarks/>
    public string VEHICLEMODEL {
        get {
            return this.vEHICLEMODELField;
        }
        set {
            this.vEHICLEMODELField = value;
        }
    }
    
    /// <remarks/>
    public string RLZL {
        get {
            return this.rLZLField;
        }
        set {
            this.rLZLField = value;
        }
    }
    
    /// <remarks/>
    public string BSXXS {
        get {
            return this.bSXXSField;
        }
        set {
            this.bSXXSField = value;
        }
    }
    
    /// <remarks/>
    public string QDFS {
        get {
            return this.qDFSField;
        }
        set {
            this.qDFSField = value;
        }
    }
    
    /// <remarks/>
    public string QDZW {
        get {
            return this.qDZWField;
        }
        set {
            this.qDZWField = value;
        }
    }
    
    /// <remarks/>
    public string ZZL {
        get {
            return this.zZLField;
        }
        set {
            this.zZLField = value;
        }
    }
    
    /// <remarks/>
    public string PQGSL {
        get {
            return this.pQGSLField;
        }
        set {
            this.pQGSLField = value;
        }
    }
    
    /// <remarks/>
    public string ZPFJD {
        get {
            return this.zPFJDField;
        }
        set {
            this.zPFJDField = value;
        }
    }
    
    /// <remarks/>
    public string ZODBWZ {
        get {
            return this.zODBWZField;
        }
        set {
            this.zODBWZField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void WriteDataToJESCompletedEventHandler(object sender, WriteDataToJESCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class WriteDataToJESCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal WriteDataToJESCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string strMsg {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void WriteDataToMesCompletedEventHandler(object sender, WriteDataToMesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class WriteDataToMesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal WriteDataToMesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string strMsg {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetProtocolCompletedEventHandler(object sender, GetProtocolCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProtocolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetProtocolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Response Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Response)(this.results[0]));
        }
    }
}
